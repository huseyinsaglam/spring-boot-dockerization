============== DockerFile ==============
1-
FROM
The base image for building a new image. This command must be on top of the dockerfile.
Hangi base image baslatırken kullanalım
MAINTAINER
Optional, it contains the name of the maintainer of the image.
Kim gelistirdi felan baslık belirtirken
RUN
Used to execute a command during the build process of the docker image.
Çalıştırmasını istedigimiz processleri
ADD
Copy a file from the host machine to the new docker image.
There is an option to use a URL for the file, docker will then download that file to the destination directory.
Yüklemek istedigimiz paketleri kullanırken
ENV
Define an environment variable.
Bir ortam değişkeni tanımlayın.
CMD
Used for executing commands when we build a new container from the docker image.
Docker image nı oluştururken build ederken kullanılır.
ENTRYPOINT
Define the default command that will be executed when the container is running.
Docker image nı çalıştırırken nasıl bir komut çalıştırayım. Console da nasıl bir komut yürüteyim
WORKDIR
This is directive for CMD command to be executed.
USER
Set the user or UID for the container created with the image.
User olustururken. user id ne olsun
VOLUME
Enable access/linked directory between the container and the host machine. Now let's start to create our first dockerfile.
Harici disk bolumu verelim mi
===============================================================

FROM java:8-jdk-alpine
COPY ./target/app.jar /usr/app/
WORKDIR /usr/app
RUN sh -c 'touch app.jar'
ENTRYPOINT ["java","-jar”,”app.jar"]


===============================================================
maven plugin
2-
io.fabric8 docker-maven-plugin 0.26.0 true true

${project.artifactId} java:8-jdk-alpine java -jar /maven/${project.artifactId}-${project.version}.jar artifact build post-integration-test build

Aşagıda yazdıgım plugin kısmını pom.xml dosyasına yazdıgınız zaman dockerFile dosyasını yazmadan dockerization yapabiliyoruz.
fabric8.io sitesinden yararlanarak alınmıştır.
Plugin kısmını pom.xml dosyasına yazmadan once aşagıdaki dependency kısmını eklemeniz gerekmektedir. fabric8.io kısmının
---------------------
2a-
<dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>run-java-sh</artifactId>
      <version>1.2.2</version>
</dependency>

2b-
<plugin>
	<groupId>io.fabric8</groupId>
	<artifactId>docker-maven-plugin</artifactId>
	<version>0.26.0</version>
	<extensions>true</extensions>
	<configuration>
		<verbose>true</verbose>
		<images>
			<image>
				<name>${project.artifactId}</name>
				<build>
					<from>java:8-jdk-alpine</from>
					<entryPoint>
						<exec>
							<args>java</args>
							<args>-jar</args>
							<args>/maven/${project.artifactId}-${project.version}.jar</args>
						</exec>
					</entryPoint>
					<assembly>
						<descriptorRef>artifact</descriptorRef>
					</assembly>
				</build>
			</image>
		</images>
	</configuration>
	<executions>
		<execution>
			<id>build</id>
			<phase>post-integration-test</phase>
			<goals>
				<goal>build</goal>
			</goals>
		</execution>
	</executions>
</plugin>
---------------------
===============================================================